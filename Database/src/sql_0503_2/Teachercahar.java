package sql_0503_2;

import javax.swing.*;

import javax.swing.table.DefaultTableModel;



import java.awt.*;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.awt.event.ItemEvent;

import java.awt.event.ItemListener;

import java.awt.event.MouseAdapter;

import java.awt.event.MouseEvent;

import java.sql.Connection;

import java.sql.DriverManager;

import java.sql.PreparedStatement;

import java.sql.ResultSet;

import java.sql.SQLException;

import java.util.Vector;



public class Teachercahar extends Panel implements ActionListener {

	// 定义组件

	JLabel jLStudentInfoTable = null;//学生信息表

	JLabel jLSelectQueryField = null;//选择查询字段

	JLabel jLEqual = null;//=

	JLabel jLSNo = null;//编号
	JLabel jLSDn = null;//系别号
	JLabel jLSName = null;//姓名
	JLabel jLSsalary = null;//薪水
	//JLabel jLclass = null;//授课专业



	JTextField jTFQueryField = null;//查询字段

	JTextField jTFSNo = null;//编号
	JTextField jTFSDn = null;//编号
	JTextField jTFSName = null;//姓名
	JTextField jTFsalary = null;//编号
	//JTextField jTclass = null;//授课专业

	

	//定义界面上的button

	JButton jBQuery = null;//查询

	JButton jBQueryAll = null;//查询所有记录

	JButton jBInsert = null;//插入

	JButton jBUpdate = null;//更新

	JButton jBDeleteCurrentRecord = null;//删除当前记录

	JButton jBDeleteAllRecords = null;//删除所有记录

	

	//JComboBox jCBSelectQueryField = null;

	//下拉框

	JComboBox<String> jCBSelectQueryField = null;//查询字段

	JPanel jP1, jP2,jP3,jP4,jP5 = null;

	JPanel jPTop, jPBottom = null;

	DefaultTableModel studentTableModel = null;

	JTable studentJTable = null;

	JScrollPane studentJScrollPane = null;

	Vector studentVector = null;

	Vector titleVector = null;

	

	private static DbProcess dbProcess;

	String SelectQueryFieldStr = "编号";

	

	// 构造函数

	public Teachercahar() {

		// 创建组件	

		jLStudentInfoTable = new JLabel("教师表");

		jLSelectQueryField = new JLabel("选择查询字段");

		jLEqual = new JLabel(" = ");

		jLSNo = new JLabel("编号");
		jLSDn = new JLabel("系别号");
		jLSName = new JLabel("姓名");
		jLSsalary = new JLabel("薪水");
		//jLclass = new JLabel("系别");

		

		jTFQueryField = new JTextField(10);//查询字段

		jTFSNo = new JTextField(10);//编号
		jTFSDn = new JTextField(10);//编号
		jTFSName = new JTextField(10);//姓名
		jTFsalary = new JTextField(10);//姓名

		//jTclass = new JTextField(10);//授课专业

		

		jBQuery = new JButton("查询");

		jBQueryAll = new JButton("查询所有记录");

		jBInsert = new JButton("插入");

		jBUpdate = new JButton("更新");

		jBDeleteCurrentRecord = new JButton("删除当前记录");

		jBDeleteAllRecords = new JButton("删除所有记录");

		// 设置监听

		jBQuery.addActionListener(this);

		jBQueryAll.addActionListener(this);

		jBInsert.addActionListener(this);

		jBUpdate.addActionListener(this);

		jBDeleteCurrentRecord.addActionListener(this);

		jBDeleteAllRecords.addActionListener(this);

		

		jCBSelectQueryField = new JComboBox<String>();//查询字段

		jCBSelectQueryField.addItem("编号");
		
		jCBSelectQueryField.addItem("姓名");  

		jCBSelectQueryField.addItem("系别");

		jCBSelectQueryField.addItemListener(new ItemListener() {//下拉框事件监听  

            public void itemStateChanged(ItemEvent event) {  

                switch (event.getStateChange()) {  

                case ItemEvent.SELECTED:  

                	SelectQueryFieldStr = (String) event.getItem();  

                    System.out.println("选中：" + SelectQueryFieldStr);  

                    break;  

                case ItemEvent.DESELECTED:  

                    System.out.println("取消选中：" + event.getItem());  

                    break;  

                }  

            }  

        });

	

		studentVector = new Vector();

		titleVector = new Vector();

		

		// 定义表头

		titleVector.add("编号");

		titleVector.add("姓名");

		titleVector.add("系别");

		//studentTableModel = new DefaultTableModel(tableTitle, 15);

		studentJTable = new JTable(studentVector, titleVector);

		studentJTable.setPreferredScrollableViewportSize(new Dimension(600,260));

		studentJScrollPane = new JScrollPane(studentJTable);

		//分别设置水平和垂直滚动条自动出现

		studentJScrollPane.setHorizontalScrollBarPolicy(                

                JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

		studentJScrollPane.setVerticalScrollBarPolicy(                

                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

		

		//为表格添加监听器 

		studentJTable.addMouseListener(new MouseAdapter()

		{ 

			public void mouseClicked(MouseEvent e) 

			{ 

				int row = ((JTable) e.getSource()).rowAtPoint(e.getPoint()); // 获得行位置

				System.out.println("mouseClicked(). row = " + row);

				Vector v = new Vector();

				v = (Vector) studentVector.get(row);



				jTFSNo.setText((String) v.get(0));// 学号
				jTFSDn.setText((String) v.get(1));// 学号
				jTFSName.setText((String) v.get(2));// 姓名
				jTFsalary.setText((String) v.get(3));// 学号

				//jTclass.setText((String) v.get(2));// 班级

			}

		});





		jP1 = new JPanel();

		jP2 = new JPanel();

		jP5 = new JPanel();

		jP3 = new JPanel();

		jP4 = new JPanel();

		jPTop = new JPanel();

		jPBottom = new JPanel();

		

		jP1.add(jLStudentInfoTable,BorderLayout.SOUTH);

		jP2.add(studentJScrollPane);

		

		

		jP3.add(jLSelectQueryField);    //选择查询字段

		jP3.add(jCBSelectQueryField);   //查询字段

		jP3.add(jLEqual);  //=

		jP3.add(jTFQueryField);	

		jP3.add(jBQuery);

		jP3.add(jBQueryAll);

		jP3.setLayout(new FlowLayout(FlowLayout.CENTER));

		jP3.setPreferredSize(new Dimension(20,20));

		

		jP4.add(jLSNo);
		jP4.add(jTFSNo);
		
		jP4.add(jLSDn);
		jP4.add(jTFSDn);

		jP4.add(jLSName);
		jP4.add(jTFSName);
		
		jP4.add(jLSsalary);
		jP4.add(jTFsalary);

		//jP4.add(jLclass);

		//jP4.add(jTclass);

		jP4.setLayout(new FlowLayout(FlowLayout.CENTER));

		jP4.setPreferredSize(new Dimension(30,30));

		

		

		jP5.add(jBInsert);

		jP5.add(jBUpdate);

		jP5.add(jBDeleteCurrentRecord);

		jP5.add(jBDeleteAllRecords);

		jP5.setLayout(new FlowLayout(FlowLayout.CENTER));

		jP5.setPreferredSize(new Dimension(20,20));

		

		jPTop.add(jP1);

		jPTop.add(jP2);

		

		jPBottom.setLayout(new GridLayout(3, 1));

		jPBottom.add(jP3);

		jPBottom.add(jP4);

		jPBottom.add(jP5);

		this.add("North", jPTop);

		this.add("South", jPBottom);

	

		this.setLayout(new GridLayout(2, 1));

		//this.setTitle("教师信息操作");

		this.setSize(530, 500);

		//this.setLocation(150, 150);

		//this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		this.setVisible(true);

		//this.setResizable(false);

		

		dbProcess = new DbProcess();

	}



	@Override

	public void actionPerformed(ActionEvent e) {

		if(e.getActionCommand().equals("查询")  

				&& !jTFQueryField.getText().isEmpty()){

				System.out.println("actionPerformed(). 查询");

				String sQueryField = jTFQueryField.getText().trim();

				queryProcess(sQueryField);

				jTFQueryField.setText("");

			}else if(e.getActionCommand().equals("查询所有记录")) {

				System.out.println("actionPerformed(). 查询所有记录");

				queryAllProcess();

			}else if(e.getActionCommand().equals("插入")

					&& !jTFSNo.getText().isEmpty()
					&& !jTFSDn.getText().isEmpty()

					&& !jTFSName.getText().isEmpty()
					&& !jTFsalary.getText().isEmpty()){

				System.out.println("actionPerformed(). 插入");

				insertProcess();

			}else if(e.getActionCommand().equals("更新")

					&& !jTFSNo.getText().isEmpty()
					&& !jTFSDn.getText().isEmpty()

					&& !jTFSName.getText().isEmpty()
					&& !jTFsalary.getText().isEmpty()){

				System.out.println("actionPerformed(). 更新");

				updateProcess();

			}else if(e.getActionCommand().equals("删除当前记录")){

				System.out.println("actionPerformed(). 删除当前记录");

				deleteCurrentRecordProcess();

			}else if(e.getActionCommand().equals("删除所有记录")){

				System.out.println("actionPerformed(). 删除所有记录");

				deleteAllRecordsProcess();

			}

		}

	

     /*

	

	public static void main(String[] args) {

		Teachercahar getcon = new  Teachercahar();

   }

	

	

	*/

	public void queryProcess(String sQueryField)

	{

		try{

			// 建立查询条件

			String sql = "select t.Tn, t.Tname, d.Dname from teacher t,departments d where t.Dn=d.Dn AND ";

			String queryFieldStr = jCBSelectQueryFieldTransfer(SelectQueryFieldStr);

		

//			if(queryFieldStr.equals("id")){//int sAge.
//
//				sql = sql + queryFieldStr;
//
//				sql = sql + " = " + sQueryField;
//
//			}else{

				sql = sql + queryFieldStr;

				sql = sql + " = ";

				sql = sql + "'" + sQueryField + "';";

//			}

			

			System.out.println("queryProcess(). sql = " + sql);

	

			dbProcess.connect();

			ResultSet rs = dbProcess.executeQuery(sql);

	

			// 将查询获得的记录数据，转换成适合生成JTable的数据形式

			studentVector.clear();

			while(rs.next()){

				Vector v = new Vector();

				v.add(rs.getString("t.Tn"));

				v.add(rs.getString("t.Tname"));

				v.add(rs.getString("d.Dname"));

				studentVector.add(v);

			}

			

			studentJTable.updateUI();



			dbProcess.disconnect();

		}catch(SQLException sqle){

			System.out.println("sqle = " + sqle);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}catch(Exception e){

			System.out.println("e = " + e);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

	}

	

	public void queryAllProcess()

	{

		try{

			// 建立查询条件

			//String sql = "select * from teacher;";
			String sql = "select t.Tn, t.Tname, d.Dname from teacher t,departments d where t.Dn=d.Dn; ";

			System.out.println("queryAllProcess(). sql = " + sql);

	

			dbProcess.connect();

			ResultSet rs = dbProcess.executeQuery(sql);



			// 将查询获得的记录数据，转换成适合生成JTable的数据形式

			studentVector.clear();

			while(rs.next()){

				Vector v = new Vector();

				v.add(rs.getString("t.Tn"));

				v.add(rs.getString("t.Tname"));

				v.add(rs.getString("d.Dname"));

				studentVector.add(v);

			}

			

			studentJTable.updateUI();



			dbProcess.disconnect();

		}catch(SQLException sqle){

			System.out.println("sqle = " + sqle);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

	}

	

	public void insertProcess()

	{

		String id = jTFSNo.getText().trim();
		String Dn = jTFSDn.getText().trim();
		String name = jTFSName.getText().trim();
		String salary = jTFsalary.getText().trim();
		//String department = jTclass.getText().trim();

		// 建立插入条件

		String sql = "insert into teacher  values('";

		sql = sql + id + "','";
		sql = sql + Dn + "','";
		sql = sql + name + "','";
		sql = sql + salary + "','";
		sql = sql + "88888888" + "');";

		



		System.out.println("insertProcess(). sql = " + sql);

		try{

			if (dbProcess.executeUpdate(sql) < 1) {

				System.out.println("insertProcess(). insert database failed.");

			}

		}catch(Exception e){

			System.out.println("e = " + e);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

		queryAllProcess();

	}



	public void updateProcess()

	{

		String sid = jTFSNo.getText().trim();
		String sDn = jTFSDn.getText().trim();
		String sname = jTFSName.getText().trim();
		String ssalary = jTFsalary.getText().trim();

		//String sClass = jTclass.getText().trim();

		// 建立更新条件

		String sql = "update teacher set Dn = '";

		sql = sql + sDn + "', Tname = '";
		sql = sql + sname + "', salary = ";
		sql = sql + ssalary ;

		sql = sql + " where Tn = '"+sid + "';";

		System.out.println("updateProcess(). sql = " + sql);

		try{

			if (dbProcess.executeUpdate(sql) < 1) {

				System.out.println("updateProcess(). update database failed.");

			}

		}catch(Exception e){

			System.out.println("e = " + e);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

		queryAllProcess();

	}



	public void deleteCurrentRecordProcess()

	{

		String sNo = jTFSNo.getText().trim();

		

		// 建立删除条件

		String sql = "delete from teacher where Tn = '" + sNo + "';";

		System.out.println("deleteCurrentRecordProcess(). sql = " + sql);

		try{

			if (dbProcess.executeUpdate(sql) < 1) {

				System.out.println("deleteCurrentRecordProcess(). delete database failed.");

			}

		}catch(Exception e){

			System.out.println("e = " + e);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

		queryAllProcess();

	}



	public void deleteAllRecordsProcess()

	{

		// 建立删除条件

		String sql = "delete from teacher;";

		System.out.println("deleteAllRecordsProcess(). sql = " + sql);

		try{

			if (dbProcess.executeUpdate(sql) < 1) {

				System.out.println("deleteAllRecordsProcess(). delete database failed.");

			}

		}catch(Exception e){

			System.out.println("e = " + e);

			JOptionPane.showMessageDialog(null,

				"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);

		}

		queryAllProcess();

	}

	

	public String jCBSelectQueryFieldTransfer(String InputStr)

	{

		String outputStr = "";

		System.out.println("jCBSelectQueryFieldTransfer(). InputStr = " + InputStr);

		

		if(InputStr.equals("编号")){

			outputStr = "t.Tn";

		}else if(InputStr.equals("姓名")){

			outputStr = "t.Tname";

		}else if(InputStr.equals("系别")){

			outputStr = "d.Dname";

		}

		System.out.println("jCBSelectQueryFieldTransfer(). outputStr = " + outputStr);

		return outputStr;

	}

}
